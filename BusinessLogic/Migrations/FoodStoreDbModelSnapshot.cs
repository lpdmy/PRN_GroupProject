// <auto-generated />
using System;
using BussinessLogic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessLogic.Migrations
{
    [DbContext(typeof(FoodStoreDb))]
    partial class FoodStoreDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessLogic.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryDescription = "Unhealthy",
                            CategoryName = "Fast food"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryDescription = "Not delicious as you see",
                            CategoryName = "Japanese food"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryDescription = "Thirsty",
                            CategoryName = "Drink"
                        });
                });

            modelBuilder.Entity("BusinessLogic.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CustomerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "mylpdde180283@fpt.edu.vn",
                            IsDisabled = false,
                            Password = "123",
                            UserName = "dieumy"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "my1lpdde180283@fpt.edu.vn",
                            IsDisabled = false,
                            Password = "123",
                            UserName = "dieumy1"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "my2lpdde180283@fpt.edu.vn",
                            IsDisabled = false,
                            Password = "123",
                            UserName = "dieumy2"
                        });
                });

            modelBuilder.Entity("BusinessLogic.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BusinessLogic.OrderProduct", b =>
                {
                    b.Property<int>("OrderProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderProductId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderProductId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("BusinessLogic.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Hamburger with cheese and beefsteak",
                            ImagePath = "/Img/hamburger.jpg",
                            Price = 10.0,
                            ProductName = "VIP Hamburger"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "Pizza with cheese and beefsteak",
                            ImagePath = "/Img/pizza.jpg",
                            Price = 50.0,
                            ProductName = "VIP Pizza"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            Description = "Sushi is fresh",
                            ImagePath = "/Img/sushi.jpg",
                            Price = 100.0,
                            ProductName = "Golden Sushi"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            Description = "Sashimi is fresh too",
                            ImagePath = "/Img/sashimi.jpg",
                            Price = 60.0,
                            ProductName = "Golden Sashimi"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2,
                            Description = "Very very big sukiyaki",
                            ImagePath = "/Img/sukiyaki.jpg",
                            Price = 150.0,
                            ProductName = "Sukiyaki Hotpot"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 3,
                            Description = "Very very big sukiyaki",
                            ImagePath = "/Img/coca.jpg",
                            Price = 15.0,
                            ProductName = "Sukiyaki Hotpot"
                        });
                });

            modelBuilder.Entity("BusinessLogic.Order", b =>
                {
                    b.HasOne("BusinessLogic.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BusinessLogic.OrderProduct", b =>
                {
                    b.HasOne("BusinessLogic.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessLogic.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BusinessLogic.Product", b =>
                {
                    b.HasOne("BusinessLogic.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BusinessLogic.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BusinessLogic.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
